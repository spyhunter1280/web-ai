import { MultimodalMetadata } from "./metadata.js";
import { ModelType } from "./modelType.js";

export const ListMultimodalModels = (
  tags?: string[],
  type?: ModelType
): MultimodalMetadata[] => {
  if (!tags && !type) {
    return models;
  }
  return models.filter((model) => {
    let tagCheck = true;
    if (model.tags && tags && tags.length > 0) {
      tagCheck = tags.every((tag) => model.tags!.includes(tag));
    }
    let typeCheck = true;
    if (type) {
      typeCheck = model.type == type;
    }
    return tagCheck && typeCheck;
  });
};

export const models: MultimodalMetadata[] = [
  {
    id: "clip-base",
    title: "CLIP for zero-shot classification",
    description: "",
    memEstimateMB: 850,
    type: ModelType.ZeroShotClassification,
    sizeMB: 370,
    modelPaths: new Map([
      ["model", "https://web-ai-models.org/multimodal/clip-base/model.onnx.gz"],
    ]),
    preprocessorPath:
      "https://web-ai-models.org/multimodal/clip-base/preprocessor_config.json",
    tokenizerPath:
      "https://web-ai-models.org/multimodal/clip-base/tokenizer.json",
    tokenizerParams: {
      bosTokenID: 49406,
      eosTokenID: 49407,
      padTokenID: 49407,
    },
    tags: ["classification", "clip"],
    referenceURL: "https://huggingface.co/openai/clip-vit-base-patch32",
  },
  {
    id: "clip-base-quant",
    title: "CLIP for zero-shot classification quantized",
    description: "",
    memEstimateMB: 500,
    type: ModelType.ZeroShotClassification,
    sizeMB: 102,
    modelPaths: new Map([
      [
        "model",
        "https://web-ai-models.org/multimodal/clip-base/model-quant.onnx.gz",
      ],
    ]),
    preprocessorPath:
      "https://web-ai-models.org/multimodal/clip-base/preprocessor_config.json",
    tokenizerPath:
      "https://web-ai-models.org/multimodal/clip-base/tokenizer.json",
    tokenizerParams: {
      bosTokenID: 49406,
      eosTokenID: 49407,
      padTokenID: 49407,
    },
    tags: ["classification", "clip"],
    referenceURL: "https://huggingface.co/openai/clip-vit-base-patch32",
  },
  {
    id: "blip-base",
    title: "BLIP for image captioning",
    description: "",
    memEstimateMB: 2100,
    type: ModelType.Img2Text,
    sizeMB: 872,
    modelPaths: new Map([
      [
        "image-encoder",
        "https://web-ai-models.org/multimodal/blip-base/encoder.onnx.gz",
      ],
      [
        "text-decoder",
        "https://web-ai-models.org/multimodal/blip-base/decoder.onnx.gz",
      ],
    ]),
    outputNames: new Map<string, string>([
      ["image-encoder", "last_hidden_state"],
      ["text-decoder", "logits"],
    ]),
    preprocessorPath:
      "https://web-ai-models.org/multimodal/blip-base/preprocessor_config.json",
    tokenizerPath:
      "https://web-ai-models.org/multimodal/blip-base/tokenizer.json",
    tokenizerParams: {
      bosTokenID: 30522,
      eosTokenID: 2,
      padTokenID: 0,
    },
    tags: ["image-captioning", "blip"],
    referenceURL:
      "https://huggingface.co/Salesforce/blip-image-captioning-base",
  },
  {
    id: "blip-base-quant",
    title: "BLIP for image captioning quantized",
    description: "",
    memEstimateMB: 2100,
    type: ModelType.Img2Text,
    sizeMB: 161,
    modelPaths: new Map([
      [
        "image-encoder",
        "https://web-ai-models.org/multimodal/blip-base/encoder-quant.onnx.gz",
      ],
      [
        "text-decoder",
        "https://web-ai-models.org/multimodal/blip-base/decoder-quant.onnx.gz",
      ],
    ]),
    outputNames: new Map<string, string>([
      ["image-encoder", "last_hidden_state"],
      ["text-decoder", "logits"],
    ]),
    preprocessorPath:
      "https://web-ai-models.org/multimodal/blip-base/preprocessor_config.json",
    tokenizerPath:
      "https://web-ai-models.org/multimodal/blip-base/tokenizer.json",
    tokenizerParams: {
      bosTokenID: 30522,
      eosTokenID: 102,
      padTokenID: 0,
    },
    tags: ["image-captioning", "blip"],
    referenceURL:
      "https://huggingface.co/Salesforce/blip-image-captioning-base",
  },
  {
    id: "blip-vqa-quant",
    title: "BLIP for question answering quantized",
    description: "",
    memEstimateMB: 2100,
    type: ModelType.Img2Text,
    sizeMB: 161,
    modelPaths: new Map([
      [
        "image-encoder",
        "https://web-ai-models.org/multimodal/blip-vqa/image-encoder-quant.onnx.gz",
      ],
      [
        "text-encoder",
        "https://web-ai-models.org/multimodal/blip-vqa/text-encoder-quant.onnx.gz",
      ],
      [
        "text-decoder",
        "https://web-ai-models.org/multimodal/blip-vqa/text-decoder-quant.onnx.gz",
      ],
    ]),
    outputNames: new Map<string, string>([
      ["image-encoder", "last_hidden_state"],
      ["text-encoder", "last_hidden_state"],
      ["text-decoder", "logits"],
    ]),
    preprocessorPath:
      "https://web-ai-models.org/multimodal/blip-vqa/preprocessor_config.json",
    tokenizerPath:
      "https://web-ai-models.org/multimodal/blip-vqa/tokenizer.json",
    tokenizerParams: {
      bosTokenID: 30522,
      eosTokenID: 102,
      padTokenID: 0,
    },
    tags: ["image-captioning", "blip"],
    referenceURL: "https://huggingface.co/Salesforce/blip-vqa-base",
  },
  {
    id: "vit-gpt2",
    title: "ViT-GPT2 for image captioning",
    description: "",
    memEstimateMB: 1800,
    type: ModelType.Img2Text,
    sizeMB: 980,
    modelPaths: new Map([
      [
        "image-encoder",
        "https://web-ai-models.org/multimodal/vit-gpt2/encoder.onnx.gz",
      ],
      [
        "text-decoder",
        "https://web-ai-models.org/multimodal/vit-gpt2/decoder.onnx.gz",
      ],
    ]),
    outputNames: new Map<string, string>([
      ["image-encoder", "last_hidden_state"],
      ["text-decoder", "logits"],
    ]),
    preprocessorPath:
      "https://web-ai-models.org/multimodal/vit-gpt2/preprocessor_config.json",
    tokenizerPath:
      "https://web-ai-models.org/multimodal/vit-gpt2/tokenizer.json",
    tokenizerParams: {
      bosTokenID: 50256,
      eosTokenID: 50256,
      padTokenID: 50256,
    },
    tags: ["image-captioning", "vit-gpt2"],
    referenceURL: "https://huggingface.co/nlpconnect/vit-gpt2-image-captioning",
  },
  {
    id: "vit-gpt2-quant",
    title: "ViT-GPT2 for image captioning quantized",
    description: "",
    memEstimateMB: 1800,
    type: ModelType.Img2Text,
    sizeMB: 183,
    modelPaths: new Map([
      [
        "image-encoder",
        "https://web-ai-models.org/multimodal/vit-gpt2/encoder-quant.onnx.gz",
      ],
      [
        "text-decoder",
        "https://web-ai-models.org/multimodal/vit-gpt2/decoder-quant.onnx.gz",
      ],
    ]),
    outputNames: new Map<string, string>([
      ["image-encoder", "last_hidden_state"],
      ["text-decoder", "logits"],
    ]),
    preprocessorPath:
      "https://web-ai-models.org/multimodal/vit-gpt2/preprocessor_config.json",
    tokenizerPath:
      "https://web-ai-models.org/multimodal/vit-gpt2/tokenizer.json",
    tokenizerParams: {
      bosTokenID: 50256,
      eosTokenID: 50256,
      padTokenID: 50256,
    },
    tags: ["image-captioning", "vit-gpt2"],
    referenceURL: "https://huggingface.co/nlpconnect/vit-gpt2-image-captioning",
  },
  {
    id: "nllb-clip-base",
    title: "Multilingual CLIP for zero-shot classification",
    description: "",
    memEstimateMB: 850,
    type: ModelType.ZeroShotClassification,
    sizeMB: 360,
    modelPaths: new Map([
      [
        "model",
        "https://web-ai-models.org/multimodal/nllb-clip-base/model-quant.onnx.gz",
      ],
    ]),
    preprocessorPath:
      "https://web-ai-models.org/multimodal/nllb-clip-base/preprocessor_config.json",
    tokenizerPath:
      "https://web-ai-models.org/multimodal/nllb-clip-base/tokenizer.json",
    tokenizerParams: {
      bosTokenID: 0,
      eosTokenID: 2,
      padTokenID: 1,
    },
    languages: new Map([
      ["Acehnese (Arabic script)", "ace_Arab"],
      ["Acehnese (Latin script)", "ace_Latn"],
      ["Mesopotamian Arabic", "acm_Arab"],
      ["Ta'izzi-Adeni Arabic", "acq_Arab"],
      ["Tunisian Arabic", "aeb_Arab"],
      ["Afrikaans", "afr_Latn"],
      ["South Levantine Arabic", "ajp_Arab"],
      ["Akan", "aka_Latn"],
      ["Amharic", "amh_Ethi"],
      ["North Levantine Arabic", "apc_Arab"],
      ["Modern Standard Arabic", "arb_Arab"],
      ["Najdi Arabic", "ars_Arab"],
      ["Moroccan Arabic", "ary_Arab"],
      ["Egyptian Arabic", "arz_Arab"],
      ["Assamese", "asm_Beng"],
      ["Asturian", "ast_Latn"],
      ["Awadhi", "awa_Deva"],
      ["Central Aymara", "ayr_Latn"],
      ["South Azerbaijani", "azb_Arab"],
      ["North Azerbaijani", "azj_Latn"],
      ["Bashkir", "bak_Cyrl"],
      ["Bambara", "bam_Latn"],
      ["Balinese", "ban_Latn"],
      ["Belarusian", "bel_Cyrl"],
      ["Bemba", "bem_Latn"],
      ["Bengali", "ben_Beng"],
      ["Bhojpuri", "bho_Deva"],
      ["Banjar (Arabic script)", "bjn_Arab"],
      ["Banjar (Latin script)", "bjn_Latn"],
      ["Standard Tibetan", "bod_Tibt"],
      ["Bosnian", "bos_Latn"],
      ["Buginese", "bug_Latn"],
      ["Bulgarian", "bul_Cyrl"],
      ["Catalan", "cat_Latn"],
      ["Cebuano", "ceb_Latn"],
      ["Czech", "ces_Latn"],
      ["Chokwe", "cjk_Latn"],
      ["Central Kurdish", "ckb_Arab"],
      ["Crimean Tatar", "crh_Latn"],
      ["Welsh", "cym_Latn"],
      ["Danish", "dan_Latn"],
      ["German", "deu_Latn"],
      ["Southwestern Dinka", "dik_Latn"],
      ["Dyula", "dyu_Latn"],
      ["Dzongkha", "dzo_Tibt"],
      ["Greek", "ell_Grek"],
      ["English", "eng_Latn"],
      ["Esperanto", "epo_Latn"],
      ["Estonian", "est_Latn"],
      ["Basque", "eus_Latn"],
      ["Ewe", "ewe_Latn"],
      ["Faroese", "fao_Latn"],
      ["Fijian", "fij_Latn"],
      ["Finnish", "fin_Latn"],
      ["Fon", "fon_Latn"],
      ["French", "fra_Latn"],
      ["Friulian", "fur_Latn"],
      ["Nigerian Fulfulde", "fuv_Latn"],
      ["Scottish Gaelic", "gla_Latn"],
      ["Irish", "gle_Latn"],
      ["Galician", "glg_Latn"],
      ["Guarani", "grn_Latn"],
      ["Gujarati", "guj_Gujr"],
      ["Haitian Creole", "hat_Latn"],
      ["Hausa", "hau_Latn"],
      ["Hebrew", "heb_Hebr"],
      ["Hindi", "hin_Deva"],
      ["Chhattisgarhi", "hne_Deva"],
      ["Croatian", "hrv_Latn"],
      ["Hungarian", "hun_Latn"],
      ["Armenian", "hye_Armn"],
      ["Igbo", "ibo_Latn"],
      ["Ilocano", "ilo_Latn"],
      ["Indonesian", "ind_Latn"],
      ["Icelandic", "isl_Latn"],
      ["Italian", "ita_Latn"],
      ["Javanese", "jav_Latn"],
      ["Japanese", "jpn_Jpan"],
      ["Kabyle", "kab_Latn"],
      ["Jingpho", "kac_Latn"],
      ["Kamba", "kam_Latn"],
      ["Kannada", "kan_Knda"],
      ["Kashmiri (Arabic script)", "kas_Arab"],
      ["Kashmiri (Devanagari script)", "kas_Deva"],
      ["Georgian", "kat_Geor"],
      ["Central Kanuri (Arabic script)", "knc_Arab"],
      ["Central Kanuri (Latin script)", "knc_Latn"],
      ["Kazakh", "kaz_Cyrl"],
      ["Kabiyè", "kbp_Latn"],
      ["Kabuverdianu", "kea_Latn"],
      ["Khmer", "khm_Khmr"],
      ["Kikuyu", "kik_Latn"],
      ["Kinyarwanda", "kin_Latn"],
      ["Kyrgyz", "kir_Cyrl"],
      ["Kimbundu", "kmb_Latn"],
      ["Northern Kurdish", "kmr_Latn"],
      ["Kikongo", "kon_Latn"],
      ["Korean", "kor_Hang"],
      ["Lao", "lao_Laoo"],
      ["Ligurian", "lij_Latn"],
      ["Limburgish", "lim_Latn"],
      ["Lingala", "lin_Latn"],
      ["Lithuanian", "lit_Latn"],
      ["Lombard", "lmo_Latn"],
      ["Latgalian", "ltg_Latn"],
      ["Luxembourgish", "ltz_Latn"],
      ["Luba-Kasai", "lua_Latn"],
      ["Ganda", "lug_Latn"],
      ["Luo", "luo_Latn"],
      ["Mizo", "lus_Latn"],
      ["Standard Latvian", "lvs_Latn"],
      ["Magahi", "mag_Deva"],
      ["Maithili", "mai_Deva"],
      ["Malayalam", "mal_Mlym"],
      ["Marathi", "mar_Deva"],
      ["Minangkabau (Latin script)", "min_Latn"],
      ["Macedonian", "mkd_Cyrl"],
      ["Plateau Malagasy", "plt_Latn"],
      ["Maltese", "mlt_Latn"],
      ["Meitei (Bengali script)", "mni_Beng"],
      ["Halh Mongolian", "khk_Cyrl"],
      ["Mossi", "mos_Latn"],
      ["Maori", "mri_Latn"],
      ["Burmese", "mya_Mymr"],
      ["Dutch", "nld_Latn"],
      ["Norwegian Nynorsk", "nno_Latn"],
      ["Norwegian Bokmål", "nob_Latn"],
      ["Nepali", "npi_Deva"],
      ["Northern Sotho", "nso_Latn"],
      ["Nuer", "nus_Latn"],
      ["Nyanja", "nya_Latn"],
      ["Occitan", "oci_Latn"],
      ["West Central Oromo", "gaz_Latn"],
      ["Odia", "ory_Orya"],
      ["Pangasinan", "pag_Latn"],
      ["Eastern Panjabi", "pan_Guru"],
      ["Papiamento", "pap_Latn"],
      ["Western Persian", "pes_Arab"],
      ["Polish", "pol_Latn"],
      ["Portuguese", "por_Latn"],
      ["Dari", "prs_Arab"],
      ["Southern Pashto", "pbt_Arab"],
      ["Ayacucho Quechua", "quy_Latn"],
      ["Romanian", "ron_Latn"],
      ["Rundi", "run_Latn"],
      ["Russian", "rus_Cyrl"],
      ["Sango", "sag_Latn"],
      ["Sanskrit", "san_Deva"],
      ["Sicilian", "scn_Latn"],
      ["Shan", "shn_Mymr"],
      ["Sinhala", "sin_Sinh"],
      ["Slovak", "slk_Latn"],
      ["Slovenian", "slv_Latn"],
      ["Samoan", "smo_Latn"],
      ["Shona", "sna_Latn"],
      ["Sindhi", "snd_Arab"],
      ["Somali", "som_Latn"],
      ["Southern Sotho", "sot_Latn"],
      ["Spanish", "spa_Latn"],
      ["Tosk Albanian", "als_Latn"],
      ["Sardinian", "srd_Latn"],
      ["Serbian", "srp_Cyrl"],
      ["Swati", "ssw_Latn"],
      ["Sundanese", "sun_Latn"],
      ["Swedish", "swe_Latn"],
      ["Swahili", "swh_Latn"],
      ["Silesian", "szl_Latn"],
      ["Tamil", "tam_Taml"],
      ["Tatar", "tat_Cyrl"],
      ["Telugu", "tel_Telu"],
      ["Tajik", "tgk_Cyrl"],
      ["Tagalog", "tgl_Latn"],
      ["Thai", "tha_Thai"],
      ["Tigrinya", "tir_Ethi"],
      ["Tamasheq (Latin script)", "taq_Latn"],
      ["Tamasheq (Tifinagh script)", "taq_Tfng"],
      ["Tok Pisin", "tpi_Latn"],
      ["Tswana", "tsn_Latn"],
      ["Tsonga", "tso_Latn"],
      ["Turkmen", "tuk_Latn"],
      ["Tumbuka", "tum_Latn"],
      ["Turkish", "tur_Latn"],
      ["Twi", "twi_Latn"],
      ["Central Atlas Tamazight", "tzm_Tfng"],
      ["Uyghur", "uig_Arab"],
      ["Ukrainian", "ukr_Cyrl"],
      ["Umbundu", "umb_Latn"],
      ["Urdu", "urd_Arab"],
      ["Northern Uzbek", "uzn_Latn"],
      ["Venetian", "vec_Latn"],
      ["Vietnamese", "vie_Latn"],
      ["Waray", "war_Latn"],
      ["Wolof", "wol_Latn"],
      ["Xhosa", "xho_Latn"],
      ["Eastern Yiddish", "ydd_Hebr"],
      ["Yoruba", "yor_Latn"],
      ["Yue Chinese", "yue_Hant"],
      ["Chinese (Simplified)", "zho_Hans"],
      ["Chinese (Traditional)", "zho_Hant"],
      ["Standard Malay", "zsm_Latn"],
      ["Zulu", "zul_Latn"],
    ]),
    tags: ["classification", "nllb-clip"],
    referenceURL: "https://huggingface.co/openai/clip-vit-base-patch32",
  },
];
